class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int ans[]=new int[nums.length-k+1];
        Deque<Integer> dq=new LinkedList<>();
        for(int i=0;i<k;i++){
            if(dq.isEmpty()){
                dq.addLast(i);
            } 
            else{
                while(!dq.isEmpty() && nums[dq.peekLast()]<nums[i]){
                    dq.removeLast();
                }
                dq.addLast(i);
            }
        }
        int l=0;
        ans[l]=nums[dq.peekFirst()];
        l++;
        for(int i=k;i<nums.length;i++){
            while(!dq.isEmpty() && nums[dq.peekLast()]<nums[i]){
                dq.removeLast();
            }
            dq.addLast(i);
            if(dq.peekFirst()<=i-k){
                dq.removeFirst();
            }
            ans[l++]=nums[dq.peekFirst()];
        }
        return ans;

    }
}