class Solution {
    public int evalRPN(String[] tokens) {
        Stack<String> st=new Stack<>();
        for(int i=0;i<tokens.length;i++){
            //st.push(tokens[i]);
            String temp=tokens[i];
            if(temp.equals("+")){
                if(st.size()>=2){
                String a=st.pop();
                String b=st.pop();
                st.push(Integer.toString(Integer.parseInt(b)+Integer.parseInt(a)));
            }
            else{
                return -1;
            }
            }
            else if(temp.equals("-")){
                 if(st.size()>=2){
                String a=st.pop();
                String b=st.pop();
                st.push(Integer.toString(Integer.parseInt(b)-Integer.parseInt(a)));
                 }
                 else{
                    return -1;
                 }
            }
            else if(temp.equals("*")){
                 if(st.size()>=2){
                String a=st.pop();
                String b=st.pop();
                st.push(Integer.toString(Integer.parseInt(b)*Integer.parseInt(a)));
                 }
                 else{
                    return -1;
                 }
            }
            else if(temp.equals("/")){
                 if(st.size()>=2){
                String a=st.pop();
                String b=st.pop();
                st.push(Integer.toString(Integer.parseInt(b)/Integer.parseInt(a)));
                 }
                 else{
                    return -1;
                 }
            }
            else{
                st.push(temp);
            }
        }
        if(st.size()>=1){
        return Integer.parseInt(st.pop());
        }
        return -1;
    }
}